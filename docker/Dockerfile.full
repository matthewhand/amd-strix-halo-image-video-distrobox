FROM registry.fedoraproject.org/fedora:rawhide

# System deps
RUN dnf -y install \
      libdrm-devel python3.13 python3.13-devel git rsync libatomic bash ca-certificates curl vim gcc \
  && dnf clean all

# Create a dedicated venv and make it default for subsequent RUNs
RUN /usr/bin/python3.13 -m venv /opt/venv
ENV VIRTUAL_ENV=/opt/venv
ENV PATH=/opt/venv/bin:$PATH
ENV PIP_NO_CACHE_DIR=1
RUN printf 'source /opt/venv/bin/activate\n' > /etc/profile.d/venv.sh

# Upgrade pip tooling inside the venv
RUN python -m pip install --upgrade pip setuptools wheel

# Utils
COPY scripts/get_wan22.sh /opt
COPY scripts/set_extra_paths.sh /opt
COPY scripts/get_qwen_image.sh /opt

# ROCm + torch stack (installed into the venv)
ARG ROCM_INDEX=https://d2awnip2yjpvqn.cloudfront.net/v2/gfx1151/
RUN python -m pip install --index-url ${ROCM_INDEX} 'rocm[libraries,devel]' \
 && python -m pip install --index-url ${ROCM_INDEX} \
      torch torchvision torchaudio pytorch-triton-rocm numpy

# Source
WORKDIR /opt
RUN git clone https://github.com/comfyanonymous/ComfyUI.git
WORKDIR /opt/ComfyUI

# ComfyUI deps + common extras (into the venv; defaults to PyPI)
RUN python -m pip install -r requirements.txt \
 && python -m pip install \
      pillow opencv-python imageio imageio-ffmpeg scipy "huggingface_hub[hf_transfer]" pyyaml

# Remove torchaudio as it causes crashes on ComfyUI at the moment
RUN python -m pip uninstall -y torchaudio

WORKDIR /opt/ComfyUI/custom_nodes
RUN git clone https://github.com/cubiq/ComfyUI_essentials
RUN git clone https://github.com/kyuz0/ComfyUI-AMDGPUMonitor

# Qwen Image Studio
WORKDIR /opt
RUN git clone https://github.com/kyuz0/qwen-image-studio
WORKDIR /opt/qwen-image-studio
RUN python -m pip install -r requirements.txt
RUN python -m pip install -e . 

# Install flash-attention from source for WAN Video Studio
WORKDIR /opt
RUN pip install triton==3.2.0
ENV FLASH_ATTENTION_TRITON_AMD_ENABLE="TRUE"
RUN git clone https://github.com/ROCm/flash-attention.git &&\ 
    cd flash-attention &&\
    git checkout main_perf &&\
    python setup.py install

# Wan Video Studio
WORKDIR /opt
RUN git clone https://github.com/kyuz0/wan-video-studio
WORKDIR /opt/wan-video-studio
# We do not use the requirements.txt from wan repo as it creates issues
RUN python -m pip install opencv-python diffusers tokenizers accelerate \
    imageio[ffmpeg] easydict ftfy dashscope imageio-ffmpeg decord librosa

# Ensure scripts are executable (no sudo in base image)
RUN chmod -R a+rwX /opt && chmod +x /opt/*.sh || true


# MOTD banner 
RUN cat >/etc/motd <<'EOF'
=== AMD Strix Halo — Image & Video Toolbox ===
Repo: https://github.com/kyuz0/amd-strix-halo-image-video-toolboxes
Image: docker.io/kyuz0/amd-strix-halo-image-video:latest

Included:
  • Qwen Image Studio  -> start_qwen_studio  (http://localhost:8000)
  • WAN 2.2 (CLI)      -> cd /opt/wan-video-studio && python generate.py ...
  • ComfyUI            -> cd /opt/ComfyUI && python main.py --port 8000 --output-directory $HOME/comfy-outputs --disable-mmap

Notes:
  • SSH forward:  ssh -L 8000:localhost:8000 user@host
EOF

# Show MOTD on shell start + add alias (again, no expansion at build time)
RUN cat >/etc/profile.d/00-toolbox-banner.sh <<'EOF'
[ -f /etc/motd ] && cat /etc/motd
alias start_qwen_studio='cd /opt/qwen-image-studio && uvicorn qwen-image-studio.server:app --reload --host 0.0.0.0 --port 8000'
EOF

# Loads variable so Triton knows where rocm binaries are
COPY scripts/01-rocm-env-for-triton.sh /etc/profile.d/01-rocm-env-for-triton.sh

CMD ["/bin/bash"]
